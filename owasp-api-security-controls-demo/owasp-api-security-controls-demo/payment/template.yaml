AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: reInforce APS332 - Payment service
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Order service VPC
  Subnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Order service subnet 1
  Subnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Order service subnet 2
Globals:
  Api:
    TracingEnabled: true

Resources:
  VpceSecurityGroup:
    Type: AWS::EC2::SecurityGroup
    Properties:
      VpcId: !Ref VpcId
      GroupDescription: reInforce APS332 - Order function security group
      SecurityGroupEgress:
        -
          Description: Allow all egress traffic
          IpProtocol: "-1"
          CidrIp: "0.0.0.0/0"

  VpceSecurityGroupIngress:
    Type: AWS::EC2::SecurityGroupIngress
    DependsOn: VpceSecurityGroup
    Properties:
      Description: Allow all inbound traffic from same security group
      GroupId: !Ref VpceSecurityGroup
      IpProtocol: "tcp"
      FromPort: "0"
      ToPort: "65535"
      SourceSecurityGroupId: !Ref VpceSecurityGroup

  PaymentsApiVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.execute-api"
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroupIds:
        - !Ref VpceSecurityGroup
      PrivateDnsEnabled: true

  # IAM Role for API Gateway + CloudWatch Logging
  CloudWatchRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: '2012-10-17'
        Statement:
          Action: 'sts:AssumeRole'
          Effect: Allow
          Principal:
            Service: apigateway.amazonaws.com
      Path: /
      Policies:
        - PolicyName: CloudWatchAccess
          PolicyDocument:
            Version: "2012-10-17"
            Statement:
              - Effect: Allow
                Action:
                  - logs:CreateLogGroup
                  - logs:CreateLogStream
                  - logs:DescribeLogGroups
                  - logs:DescribeLogStreams
                  - logs:PutLogEvents
                  - logs:GetLogEvents
                  - logs:FilterLogEvents
                Resource:
                  - !GetAtt PaymentApiLogGroup.Arn
                  - !Sub ${PaymentApiLogGroup.Arn}:log-stream:*

  ApiCWLRoleArn:
    Type: AWS::ApiGateway::Account
    Properties: 
      CloudWatchRoleArn: !GetAtt CloudWatchRole.Arn

  PaymentApiLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

  PaymentApi:
    Type: AWS::Serverless::Api
    DependsOn: ApiCWLRoleArn
    Properties:
      Description: Payment API
      TracingEnabled: true
      StageName: Prod
      EndpointConfiguration: PRIVATE
      Cors: "'*'"
      Auth:
        DefaultAuthorizer: AWS_IAM
      AccessLogSetting:
        DestinationArn: !GetAtt PaymentApiLogGroup.Arn
        Format: '{ "requestId": "$context.requestId", "path": "$context.path", "routeKey": "$context.routeKey", "ip": "$context.identity.sourceIp", "requestTime": "$context.requestTime", "httpMethod": "$context.httpMethod","statusCode": $context.status }'
      DefinitionBody:
        x-amazon-apigateway-request-validators:
          all:
            validateRequestBody: true
            validateRequestParameters: true
        x-amazon-apigateway-request-validator: all
        x-amazon-apigateway-policy:
          Version: "2012-10-17"
          Statement:
            -
              Effect: "Allow"
              Principal: "*"
              Action:
                - "execute-api:Invoke"
              Resource: "execute-api:/*"
              Condition:
                StringEquals:
                  aws:sourceVpce: !Ref PaymentsApiVpcEndpoint
        openapi : 3.0.3
        info :
            version : 1.0
            title : reInforce APS332 demo - Payment API
            description: reInforce APS332 demo - Payment service
        paths:
          /makePayment:
            post:
              summary: Process payment
              requestBody:
                content:
                  application/json:
                    schema:
                      $ref: '#/components/schemas/Item'
              responses:
                '200':
                  description: Successful operation
                '400':
                  description: Invalid request
              x-amazon-apigateway-integration:
                  type: mock
                  requestTemplates:
                      application/json: '{"statusCode" : 200}'
                  passthroughBehavior: "when_no_templates"
                  responses:
                    default:
                      statusCode: "200"
                      responseTemplates:
                          application/json: '{"message": "mock response"}'
        components:
          schemas:
            ItemData:
              type: object
              required:
                - name
                - card
                - price
              properties:
                name:
                  type: string
                  example: Jane Doe
                card:
                  type: string
                  example: HASH123456
                price:
                  type: number
                  format: currency
                  example: 5.99
            Item:
              allOf:
                - type: object
                  required:
                    - id
                  properties:
                    id:
                      type: string
                      example: 1
                - $ref: '#/components/schemas/ItemData'
Outputs:
  PaymentsApi:
    Description: Payment service API
    Value: !Sub 'https://${PaymentApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'
  PaymentsApiDns:
    Description: Payment API DNS
    Value: !Sub '${PaymentApi}.execute-api.${AWS::Region}.amazonaws.com'
  PaymentsApiStage:
    Description: Payment API stage
    Value: Prod
  ApiVpcEndpoint:
    Description: VPC endpoint name
    Value: !Ref PaymentsApiVpcEndpoint
  VpceDns:
    Description: Payment API VPC endpoint DNS
    Value: 
      Fn::Select:
        - 0
        - !GetAtt PaymentsApiVpcEndpoint.DnsEntries
  VpceSecurityGroup:
    Description: VPC endpoint security group
    Value: !GetAtt VpceSecurityGroup.GroupId