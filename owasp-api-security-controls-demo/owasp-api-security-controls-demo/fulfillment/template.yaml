AWSTemplateFormatVersion: '2010-09-09'
Transform: AWS::Serverless-2016-10-31
Description: reInforce APS332 - Fulfillment service
Parameters:
  VpcId:
    Type: AWS::EC2::VPC::Id
    Description: Order service VPC
  Subnet1:
    Type: AWS::EC2::Subnet::Id
    Description: Fulfillment service subnet 1
  Subnet2:
    Type: AWS::EC2::Subnet::Id
    Description: Fulfillment service subnet 2
  VpceSecurityGroup:
    Type: AWS::EC2::SecurityGroup::Id
    Description: Fulfillment service security group
  FulfillmentApiVpcEndpoint:
    Type: String
    Description: Fulfillment service API VPC endpoint
  OrderStatusDDBIndexName:
    Type: String
    Default: order_status-index
  ApiStage:
    Type: String
    Default: Prod
Globals:
  Function:
    Timeout: 5
    Runtime: python3.12
    Tracing: Active
    Architectures:
      - arm64
    Environment:
      Variables:
        POWERTOOLS_LOG_LEVEL: DEBUG
        POWERTOOLS_LOGGER_SAMPLE_RATE: 0.1
        POWERTOOLS_LOGGER_LOG_EVENT: true
        POWERTOOLS_SERVICE_NAME: FulfillmentService

  Api:
    TracingEnabled: true

Resources:
  # Needed for order service in VPC to publish messages to SQS
  FulfillmentQVpcEndpoint:
    Type: AWS::EC2::VPCEndpoint
    Properties:
      VpcId: !Ref VpcId
      ServiceName: !Sub "com.amazonaws.${AWS::Region}.sqs"
      VpcEndpointType: Interface
      SubnetIds:
        - !Ref Subnet1
        - !Ref Subnet2
      SecurityGroupIds:
        - !Ref VpceSecurityGroup
      PrivateDnsEnabled: true

  FulfillmentDLQ: 
    Type: AWS::SQS::Queue
    Properties: 
      SqsManagedSseEnabled: true

  FulfillmentQ:
    Type: AWS::SQS::Queue
    Properties:
      SqsManagedSseEnabled: true
      RedrivePolicy: 
        deadLetterTargetArn: !GetAtt FulfillmentDLQ.Arn
        maxReceiveCount: 5

  FulfillmentQPolicy:      
    Type: AWS::SQS::QueuePolicy
    Properties:
      PolicyDocument:
        Statement: 
          - 
            Action: 
              - sqs:SendMessage
              - sqs:ReceiveMessage
            Effect: "Allow"
            Resource: FulfillmentQ.Arn
            Principal:
              AWS:
                - !Sub ${AWS::AccountId}
            Condition:
              Bool:
                "aws:SecureTransport": true
          - 
            Action: 
              - sqs:SendMessage
              - sqs:ReceiveMessage
            Effect: "Allow"
            Resource: FulfillmentDLQ.Arn
            Principal:
              AWS:
                - !Sub ${AWS::AccountId}
            Condition:
              Bool:
                "aws:SecureTransport": true
      Queues: 
        - !Ref FulfillmentQ
        - !Ref FulfillmentDLQ

  FulfillmentQLambda:
    Type: AWS::Serverless::Function
    Connectors:
      DDBConn:
        Properties:
          Destination:
            Id: FulfillmentTable
          Permissions:
            - Write
    Properties:
      Description: reInforce 2024 - APS332 - Fulfillment service
      Handler: index.lambda_handler
      CodeUri: src/
      Policies:
        - arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
        - arn:aws:iam::aws:policy/AWSXrayWriteOnlyAccess
        - SQSSendMessagePolicy:
            QueueName: !GetAtt FulfillmentQ.QueueName
      Environment:
        Variables:
          FULFILLMENT_TABLE: !Ref FulfillmentTable
      # ReservedConcurrentExecutions: 5
      Events:
        ProcessOrders:
          Type: SQS
          Properties:
            FunctionResponseTypes:
              - ReportBatchItemFailures
            Queue: !GetAtt FulfillmentQ.Arn
            BatchSize: 10

  FulfillmentTable:
    Type: AWS::DynamoDB::Table
    Properties:
      BillingMode: PAY_PER_REQUEST
      AttributeDefinitions: 
        - 
          AttributeName: "order_id"
          AttributeType: "S"
        - 
          AttributeName: "order_date"
          AttributeType: "S"
        - 
          AttributeName: "order_status"
          AttributeType: "S"
      KeySchema: 
        - 
          AttributeName: "order_id"
          KeyType: "HASH"
        - 
          AttributeName: "order_date"
          KeyType: "RANGE"
      SSESpecification:
        SSEEnabled: true
      GlobalSecondaryIndexes:
        -
          IndexName: !Ref OrderStatusDDBIndexName
          KeySchema: 
            - 
              AttributeName: "order_status"
              KeyType: "HASH"        
            - 
              AttributeName: "order_date"
              KeyType: "RANGE"
          Projection:
            ProjectionType: ALL

  # Fulfillment service
  FulfillmentApiLogGroup:
    Type: AWS::Logs::LogGroup
    Properties:
      RetentionInDays: 7

  FulfillmentApi:
    Type: AWS::Serverless::Api
    Properties:
      Description: Fulfillment API
      StageName: !Ref ApiStage
      EndpointConfiguration: PRIVATE
      Cors: "'*'"
      TracingEnabled: true
      Auth:
        DefaultAuthorizer: AWS_IAM
        # https://github.com/aws/serverless-application-model/issues/1708#issuecomment-1108812052
        InvokeRole: NONE
        ResourcePolicy:
          CustomStatements: [{
            "Effect": "Allow",
            "Principal": "*",
            "Action": "execute-api:Invoke",
            "Resource": [
              !Sub "execute-api:/${ApiStage}/GET/listPendingOrders", 
              !Sub "execute-api:/${ApiStage}/POST/updateOrderStatus"],
            "Condition": {
              "StringEquals": {
                "aws:sourceVpce": !Ref FulfillmentApiVpcEndpoint
              }
            }
          }]
      AccessLogSetting:
        DestinationArn: !GetAtt FulfillmentApiLogGroup.Arn
        Format: '{ "requestId": "$context.requestId", "path": "$context.path", "routeKey": "$context.routeKey", "ip": "$context.identity.sourceIp", "requestTime": "$context.requestTime", "httpMethod": "$context.httpMethod","statusCode": $context.status }'

  FulfillmentFunction:
    Type: AWS::Serverless::Function
    Connectors:
      DDBConn:
        Properties:
          Destination:
            Id: FulfillmentTable
          Permissions:
            - Read
            - Write
    Properties:
      Description: reInforce 2024 - APS332 - Fulfillment service
      Handler: api.lambda_handler
      CodeUri: src/
      Environment:
        Variables:
          FULFILLMENT_TABLE_NAME: !Ref FulfillmentTable
          ORDER_STATUS_INDEX: !Ref OrderStatusDDBIndexName
      # ReservedConcurrentExecutions: 5
      Events:
        UpdateOrderStatus:
          Type: Api
          Properties:
            RestApiId: !Ref FulfillmentApi
            Path: /updateOrderStatus
            Method: POST
        ListPendingOrders:
          Type: Api
          Properties:
            RestApiId: !Ref FulfillmentApi
            Path: /listPendingOrders
            Method: GET

Outputs:
  FulfillmentApi:
    Description: Payment service API
    Value: !Sub 'https://${FulfillmentApi}.execute-api.${AWS::Region}.amazonaws.com/Prod'
  FulfillmentQUrl:
    Description: Fulfillment queue url
    Value: !Ref FulfillmentQ
  FulfillmentQName:
    Description: Fulfillment queue name
    Value: !GetAtt FulfillmentQ.QueueName
  FulfillmentQArn:
    Description: Fulfillment queue arn
    Value: !GetAtt FulfillmentQ.Arn
  SqsVpcEndpoint:
    Description: VPC endpoint name
    Value: !Ref FulfillmentQVpcEndpoint
  FulfillmentTableName:
    Description: Fulfillment table name
    Value: !Ref FulfillmentTable